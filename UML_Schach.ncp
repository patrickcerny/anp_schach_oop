<Project>
  <Name>UML</Name>
  <ProjectItem type="NClass.DiagramEditor.ClassDiagram.Diagram" assembly="NClass.DiagramEditor, Version=2.4.1823.0, Culture=neutral, PublicKeyToken=null">
    <Name>Schach</Name>
    <Language>CSharp</Language>
    <Entities>
      <Entity type="Class">
        <Name>Figure</Name>
        <Access>Public</Access>
        <Location left="1869" top="726" />
        <Size width="383" height="247" />
        <Collapsed>False</Collapsed>
        <Member type="Field">public Tile CurrentTile</Member>
        <Member type="Field">public bool IsOnField = true</Member>
        <Member type="Method">public abstract List&lt;Tile&gt; GetPossibleMoves()</Member>
        <Member type="Method">public List&lt;Tile&gt; SortOutMoves()</Member>
        <Member type="Method">public List&lt;Tile&gt; GetDiagonalMoves()</Member>
        <Member type="Method">public List&lt;Tile&gt; GetStraigtMoves()</Member>
        <Member type="Property">public Color FigureColor { get; set; }</Member>
        <Member type="Event">public event EventTypeClickedFigure FigureClicked</Member>
        <Member type="Constructor">public Figure(Size panelSize, Tile startingTile, List&lt;Tile&gt; Tiles)</Member>
        <Member type="Method">protected override void OnClick(EventArgs e)</Member>
        <Modifier>Abstract</Modifier>
      </Entity>
      <Entity type="Enum">
        <Name>FigureTypes</Name>
        <Access>Public</Access>
        <Location left="1634" top="515" />
        <Size width="215" height="169" />
        <Collapsed>False</Collapsed>
        <Value>pawn</Value>
        <Value>bishop</Value>
        <Value>tower</Value>
        <Value>horse</Value>
        <Value>queen</Value>
        <Value>king</Value>
      </Entity>
      <Entity type="Class">
        <Name>Panel</Name>
        <Access>Public</Access>
        <Location left="2180" top="515" />
        <Size width="162" height="77" />
        <Collapsed>False</Collapsed>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Bishop</Name>
        <Access>Public</Access>
        <Location left="1378" top="1052" />
        <Size width="290" height="113" />
        <Collapsed>False</Collapsed>
        <Member type="Constructor">public Bishop(Tile startingTile, List&lt;Tile&gt; Tiles)</Member>
        <Member type="Method">public override List&lt;Tile&gt; GetPossibleMoves()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Horse</Name>
        <Access>Public</Access>
        <Location left="1685" top="1052" />
        <Size width="288" height="113" />
        <Collapsed>False</Collapsed>
        <Member type="Constructor">public Horse(Tile startingTile, List&lt;Tile&gt; Tiles)</Member>
        <Member type="Method">public override List&lt;Tile&gt; GetPossibleMoves()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>King</Name>
        <Access>Public</Access>
        <Location left="1991" top="1052" />
        <Size width="299" height="113" />
        <Collapsed>False</Collapsed>
        <Member type="Constructor">public King(Tile startingTile, List&lt;Tile&gt; Tiles)</Member>
        <Member type="Method">public override List&lt;Tile&gt; GetPossibleMoves()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Pawn</Name>
        <Access>Public</Access>
        <Location left="2308" top="1052" />
        <Size width="290" height="113" />
        <Collapsed>False</Collapsed>
        <Member type="Constructor">public Pawn(Tile startingTile, List&lt;Tile&gt; Tiles)</Member>
        <Member type="Method">public override List&lt;Tile&gt; GetPossibleMoves()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Queen</Name>
        <Access>Public</Access>
        <Location left="2612" top="1052" />
        <Size width="286" height="113" />
        <Collapsed>False</Collapsed>
        <Member type="Constructor">public Queen(Tile startingTile, List&lt;Tile&gt; Tiles)</Member>
        <Member type="Method">public override List&lt;Tile&gt; GetPossibleMoves()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Tile</Name>
        <Access>Public</Access>
        <Location left="2271" top="726" />
        <Size width="361" height="247" />
        <Collapsed>False</Collapsed>
        <Member type="Field">public int X</Member>
        <Member type="Field">public int Y</Member>
        <Member type="Field">public Figure CurrentFigure = null</Member>
        <Member type="Field">private readonly Color _initialColor</Member>
        <Member type="Constructor">public Tile(Size tileSize, Color Color, Point Coords)</Member>
        <Member type="Method">protected override void OnClick(EventArgs e)</Member>
        <Member type="Event">public event EventTypeTileClicked TileClicked</Member>
        <Member type="Method">public void RepaintSelf()</Member>
        <Member type="Method">public void PaintSelfPossible(Color PossibleMovesColor)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Delegate">
        <Name>EventTypeTileClicked</Name>
        <Access>Public</Access>
        <Location left="2649" top="726" />
        <Size width="209" height="98" />
        <Collapsed>False</Collapsed>
        <ReturnType>void</ReturnType>
        <Param>object sender</Param>
        <Param>EventArgs e</Param>
      </Entity>
      <Entity type="Delegate">
        <Name>EventTypeClickedFigure</Name>
        <Access>Public</Access>
        <Location left="1634" top="726" />
        <Size width="216" height="104" />
        <Collapsed>False</Collapsed>
        <ReturnType>void</ReturnType>
        <Param>object sender</Param>
        <Param>EventArgs e</Param>
      </Entity>
      <Entity type="Class">
        <Name>Tower</Name>
        <Access>Public</Access>
        <Location left="2916" top="1052" />
        <Size width="292" height="112" />
        <Collapsed>False</Collapsed>
        <Member type="Constructor">public Tower(Tile startingTile, List&lt;Tile&gt; Tiles)</Member>
        <Member type="Method">public override List&lt;Tile&gt; GetPossibleMoves()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Comment">
        <Text>zwei Listen in Figure nicht angelegt</Text>
        <Location left="315" top="470" />
        <Size width="149" height="56" />
      </Entity>
    </Entities>
    <Relationships>
      <Relationship type="Generalization" first="0" second="2">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="3" second="0">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="4" second="0">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="5" second="0">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="6" second="0">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="7" second="0">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="8" second="2">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="11" second="0">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
    </Relationships>
  </ProjectItem>
</Project>